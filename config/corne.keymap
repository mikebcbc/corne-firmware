/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <150>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        jkForEscape {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };
    };

    behaviors {
        tap_shift_caps: tap_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&sk RIGHT_SHIFT>, <&caps_word>;
        };
    };

    macros {
        highlight_left: highlight_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LEFT))>;
            label = "HIGHLIGHT_LEFT";
        };

        highlight_right: highlight_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(RIGHT))>;
            label = "HIGHLIGHT_RIGHT";
        };

        highlight_up: highlight_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(UP_ARROW))>;
            label = "HIGHLIGHT_UP";
        };

        highlight_down: highlight_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(DOWN_ARROW))>;
            label = "HIGHLIGHT_DOWN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R      &kp T        &kp Y          &kp U        &kp I            &kp O    &kp P     &kp RIGHT_ALT
&kp LCTRL       &kp A  &kp S  &kp D     &kp F      &kp G        &kp H          &kp J        &kp K            &kp L    &kp SEMI  &tog 4
&sk LEFT_SHIFT  &kp Z  &kp X  &kp C     &kp V      &kp B        &kp N          &kp M        &kp COMMA        &kp DOT  &kp FSLH  &sl 3
                              &sk LGUI  &lt 1 TAB  &kp SPACE    &kp BACKSPACE  &lt 2 ENTER  &tap_shift_caps
            >;
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "NumNav";
            bindings = <
&trans  &kp NUMBER_1  &kp N2  &kp N3    &kp N4        &kp N5    &kp N6    &kp N7         &kp N8       &kp N9     &kp N0      &trans
&trans  &trans        &trans  &kp LGUI  &kp LEFT_ALT  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans      &trans
&trans  &trans        &trans  &trans    &trans        &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp DELETE  &kp INSERT
                              &trans    &trans        &trans    &trans    &trans         &trans
            >;
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Symbol";
            bindings = <
&trans  &kp EXCLAMATION  &kp AT     &kp HASH      &kp DOLLAR            &kp PERCENT         &kp CARET          &kp AMPS               &kp ASTRK  &kp SLASH       &kp BACKSLASH      &trans
&trans  &kp GRAVE        &kp EQUAL  &kp PIPE      &kp LEFT_BRACE        &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE        &kp COLON  &kp MINUS       &kp DOUBLE_QUOTES  &trans
&trans  &kp TILDE        &kp PLUS   &kp QUESTION  &kp LEFT_PARENTHESIS  &kp LESS_THAN       &kp GREATER_THAN   &kp RIGHT_PARENTHESIS  &kp SEMI   &kp UNDERSCORE  &kp SINGLE_QUOTE   &trans
                                    &trans        &trans                &trans              &trans             &trans                 &trans
            >;
        };

        function_layer {
            display-name = "Function";
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6     &bt BT_PRV  &kp C_VOLUME_UP  &kp C_NEXT  &trans        &trans  &trans
&kp F7   &kp F8   &kp F9   &kp F10  &kp F11  &kp F12    &bt BT_CLR  &kp K_MUTE       &kp C_PP    &kp LEFT_ALT  &trans  &trans
&kp F13  &kp F14  &kp F15  &kp F16  &kp F17  &kp F18    &bt BT_NXT  &kp C_VOL_DN     &kp C_PREV  &trans        &trans  &trans
                           &trans   &trans   &trans     &trans      &trans           &trans
            >;
        };

        gaming_layer {
            display-name = "Gaming";
            bindings = <
&kp ESCAPE    &kp TAB       &kp Q  &kp W      &kp E      &kp R        &trans  &trans  &trans  &trans  &trans  &kp LA(LG(B))
&kp NUMBER_1  &kp N2        &kp A  &kp S      &kp D      &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&kp NUMBER_3  &kp NUMBER_4  &kp Z  &kp X      &kp C      &kp V        &trans  &trans  &trans  &trans  &trans  &mo 3
                                   &kp LCTRL  &kp LSHFT  &kp SPACE    &trans  &trans  &trans
            >;
        };
    };
};
